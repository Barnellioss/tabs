{"version":3,"sources":["redux/tabsReducer.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["SET_TAB","initialState","tabs","name","active","id","setTab","value","type","tabsReducer","state","action","map","e","App","useSelector","tabsState","dispatch","useDispatch","className","item","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"wKACMA,EAAU,UAGZC,EAAe,CACfC,KAAM,CACF,CAAEC,KAAM,YAAaC,QAAQ,EAAOC,GAAI,GACxC,CAAEF,KAAM,cAAeC,QAAQ,EAAOC,GAAI,GAC1C,CAAEF,KAAM,mBAAoBC,QAAQ,EAAMC,GAAI,GAC9C,CAAEF,KAAM,uBAAwBC,QAAQ,EAAOC,GAAI,GACnD,CAAEF,KAAM,mBAAoBC,QAAQ,EAAOC,GAAI,GAC/C,CAAEF,KAAM,mBAAoBC,QAAQ,EAAMC,GAAI,GAC9C,CAAEF,KAAM,qBAAsBC,QAAQ,EAAOC,GAAI,GACjD,CAAEF,KAAM,iBAAkBC,OAAQ,WAAYC,GAAI,GAClD,CAAEF,KAAM,mBAAoBC,OAAQ,WAAYC,GAAI,GACpD,CAAEF,KAAM,mBAAoBC,QAAQ,EAAOC,GAAI,MAgB1CC,EAAS,SAACC,GAAD,MAAY,CAAEC,KAAMR,EAASO,UAGpCE,EAfK,WAAmC,IAAlCC,EAAiC,uDAAzBT,EAAcU,EAAW,uCAClD,OAAQA,EAAOH,MACX,KAAKR,EACD,OAAO,2BACAU,GADP,IAEIR,KAAMQ,EAAMR,KAAKU,KAAI,SAAAC,GAAC,OAAIA,EAAER,KAAOM,EAAOJ,MAAhB,2BAA4BM,GAA5B,IAA+BT,QAASS,EAAET,SAAUS,OAEtF,QACI,OAAOH,I,OCQJI,MA9Bf,WAEE,IAAMZ,EAAOa,aAAY,SAACL,GAAD,OAAWA,EAAMM,UAAUd,QAE9Ce,EAAWC,cAEjB,OACE,qBAAKC,UAAU,MAAf,SACE,oBAAIA,UAAU,YAAd,SACGjB,EAAKU,KAAI,SAAAQ,GAAI,OACI,IAAhBA,EAAKhB,OACH,oBAAkBe,UAAU,yBAA5B,SACE,wBAAQE,QAAS,kBAAMJ,EAASX,EAAOc,EAAKf,MAA5C,SAAmDe,EAAKjB,QADjDiB,EAAKf,KAIE,IAAhBe,EAAKhB,OAEH,oBAAkBe,UAAU,0BAA5B,SACE,wBAAQE,QAAS,kBAAMJ,EAASX,EAAOc,EAAKf,MAA5C,SAAmDe,EAAKjB,QADjDiB,EAAKf,IAId,oBAAkBc,UAAU,4BAA5B,SACE,iCAASC,EAAKjB,QADPiB,EAAKf,YCdbiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCHVQ,EAAWC,YAAgB,CAC3BhB,UAAWP,IAGXwB,EAAQC,YAAYH,GACxBI,OAAOF,MAAQA,EAEAA,QCJfG,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.3a654396.chunk.js","sourcesContent":["\r\nconst SET_TAB = 'SET_TAB';\r\n\r\n\r\nlet initialState = {\r\n    tabs: [\r\n        { name: \"Job Focus\", active: false, id: 1 },\r\n        { name: \"Soft Skills\", active: false, id: 2 },\r\n        { name: \"Technical Skills\", active: true, id: 3 },\r\n        { name: \"Functional Expertise\", active: false, id: 4 },\r\n        { name: \"Domain Expertise\", active: false, id: 5 },\r\n        { name: \"Patent Expertice\", active: true, id: 6 },\r\n        { name: \"Personal Expertise\", active: false, id: 7 },\r\n        { name: \"Hard Expertise\", active: 'Disabled', id: 8 },\r\n        { name: \"Domain Expertise\", active: 'Disabled', id: 9 },\r\n        { name: \"Domain Expertise\", active: false, id: 10 }\r\n    ]\r\n}\r\n\r\nconst tabsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TAB:\r\n            return {\r\n                ...state,\r\n                tabs: state.tabs.map(e => e.id === action.value ? {...e, active: !e.active} : e)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTab = (value) => ({ type: SET_TAB, value });\r\n\r\n\r\nexport default tabsReducer;","//import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport { setTab } from './redux/tabsReducer';\n\nfunction App() {\n\n  const tabs = useSelector((state) => state.tabsState.tabs)\n\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"App\">\n      <ul className=\"listItems\">\n        {tabs.map(item =>\n          item.active === false ?\n            <li key={item.id} className=\"listItem listItemBasic\">\n              <button onClick={() => dispatch(setTab(item.id))}>{item.name}</button>\n            </li>\n            :\n            item.active === true\n              ?\n              <li key={item.id} className=\"listItem listItemActive\">\n                <button onClick={() => dispatch(setTab(item.id))}>{item.name}</button>\n              </li>\n              :\n              <li key={item.id} className=\"listItem listItemDisabled\">\n                <button>{item.name}</button>\n              </li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from 'redux'\r\nimport tabsReducer from './tabsReducer'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    tabsState: tabsReducer\r\n})\r\n\r\nlet store = createStore(reducers)\r\nwindow.store = store\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}